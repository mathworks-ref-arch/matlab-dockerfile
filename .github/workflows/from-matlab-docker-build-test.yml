# Copyright 2023-2025 The MathWorks, Inc.

name: Build and Test the "Building on MATLAB Docker Image" Dockerfile

# Trigger this workflow either manually or when a new change is pushed to the
# repo (except .md files)
on:
  workflow_dispatch:
  push:
    # Trigger the workflow when the Dockerfile or any file under tests/ is modified
    paths:
      - "alternates/building-on-matlab-docker-image/Dockerfile"
      - "tests/alternates/building-on-matlab-docker-image/*"
      - "tests/utils/**"
      - ".github/workflows/from-matlab-docker-build-test.yml"
      - "!**.md"
  schedule:
    # Run at 00:00 on every Monday (1st Day of the Week)
    - cron: "0 0 * * 1"

env:
  IMAGE_BASE_NAME: from-matlab-docker
  ALT_PATH: alternates/building-on-matlab-docker-image
  LICENSE_FILE_PATH: ${{ github.workspace }}/license.lic

jobs:
  build-test-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        matlab-release:
          - R2025b
          - R2025a
          - R2024b
          - R2024a
          - R2023b
          - R2023a
          - R2022b
          - R2022a

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image locally
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          context: ${{ env.ALT_PATH }}
          load: true
          build-args: |
            MATLAB_RELEASE=${{ matrix.matlab-release }}
          tags: |
            ${{ env.IMAGE_BASE_NAME }}:${{ matrix.matlab-release }}

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi

      - name: Generate license file
        run: echo '${{ secrets.MATLAB_LICENSE_FILE }}' > ${{ env.LICENSE_FILE_PATH }}

      - name: Test container
        working-directory: tests
        env:
          IMAGE_NAME: ${{ env.IMAGE_BASE_NAME }}:${{ matrix.matlab-release }}
        run: python -m unittest -v ${{ env.ALT_PATH }}/*.py
